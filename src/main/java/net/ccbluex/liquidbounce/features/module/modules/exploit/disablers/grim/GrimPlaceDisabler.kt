/*
 * FDPClient Hacked Client
 * A free open source mixin-based injection hacked client for Minecraft using Minecraft Forge by LiquidBounce.
 * https://github.com/SkidderMC/FDPClient/
 */
package net.ccbluex.liquidbounce.features.module.modules.exploit.disablers.grim

import net.ccbluex.liquidbounce.event.EventState
import net.ccbluex.liquidbounce.event.MotionEvent
import net.ccbluex.liquidbounce.event.PacketEvent
import net.ccbluex.liquidbounce.features.module.modules.exploit.disablers.DisablerMode
import net.ccbluex.liquidbounce.features.value.BoolValue
import net.minecraft.network.Packet
import net.minecraft.network.play.client.C08PacketPlayerBlockPlacement
import net.minecraft.network.play.client.C0BPacketEntityAction
import net.minecraft.network.play.client.C0EPacketClickWindow
import java.util.concurrent.LinkedBlockingQueue

class GrimPlaceDisabler  : DisablerMode("Grim Place") {
    private val packetsG = LinkedBlockingQueue<Packet<*>>()
    private var pre = false
    private val c0e = BoolValue("ChestStealer", true)
    private val c08 = BoolValue("PlaceBlock", true)
    private val c0b = BoolValue("C0B", true)


    override fun onMotion(event: MotionEvent) {
        pre = event.eventState == EventState.PRE
        if (event.eventState == EventState.PRE) {
            try {
                while (!packetsG.isEmpty()) {
                    mc.netHandler!!.addToSendQueue(packetsG.take())
                    disabler.debugMessage("Sending queued packets")
                }
            } catch (e: Exception) {
                e.printStackTrace()
            }
        }
    }

    override fun onPacket(event: PacketEvent) {
        val packet = event.packet

        if (packet is C0EPacketClickWindow && c0e.get()) {
            if (!pre) {
                event.cancelEvent()
                packetsG.add(packet)
                disabler.debugMessage("Sending C0E")
            }
        }
        if (packet is C0BPacketEntityAction && c0b.get()) {
            if (!pre) {
                event.cancelEvent()
                packetsG.add(packet)
                disabler.debugMessage("Sendig C0B")
            }
        }
        if (packet is C08PacketPlayerBlockPlacement && c08.get()) {
            if (!pre) {
                event.cancelEvent()
                packetsG.add(packet)
                disabler.debugMessage("Seding C08")
            }
        }
    }


}