package net.ccbluex.liquidbounce.features.module.modules.exploit.disablers.grim

import net.ccbluex.liquidbounce.event.EventTarget
import net.ccbluex.liquidbounce.event.PacketEvent
import net.ccbluex.liquidbounce.features.module.modules.exploit.disablers.DisablerMode
import net.ccbluex.liquidbounce.features.value.BoolValue
import net.minecraft.network.play.client.C09PacketHeldItemChange
import net.minecraft.network.play.client.C0BPacketEntityAction

class GrimBadPacketDisabler : DisablerMode("GrimACBadPacket") {
    private val ba = BoolValue("BadPacketA",true)
    private val bb = BoolValue("BadPacketF",true)
    private var lastsprint = true

    @EventTarget
    override fun onPacket(event: PacketEvent) {
        val packet = event.packet
        if (ba.get() && packet is C09PacketHeldItemChange) {
            val slot = mc.thePlayer.inventory.currentItem
            if (slot == mc.thePlayer.inventory.currentItem && slot != -1) {
                event.cancelEvent()
            }
        }
        if (bb.get() && packet is C0BPacketEntityAction && !mc.thePlayer.isDead) {
            if (packet.action == C0BPacketEntityAction.Action.START_SPRINTING) {
                if (lastsprint) {
                    event.cancelEvent()
                }
                lastsprint = true
            } else {
                if (packet.action == C0BPacketEntityAction.Action.STOP_SPRINTING) {
                    if (!lastsprint) {
                        event.cancelEvent()
                    }
                    lastsprint = false
                }
            }
        }
    }
}